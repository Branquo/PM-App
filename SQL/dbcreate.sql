-- MySQL Script generated by MySQL Workbench
-- Tue Sep 12 13:47:04 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema PM
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PM
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PM` DEFAULT CHARACTER SET utf8 ;
USE `PM` ;

-- -----------------------------------------------------
-- Table `PM`.`user_account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`user_account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(64) NOT NULL,
  `password` VARCHAR(64) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(64) NOT NULL,
  `last_name` VARCHAR(64) NOT NULL,
  `is_project_manager` TINYINT NOT NULL,
  `registration_time` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`employee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `employee_code` VARCHAR(128) NOT NULL,
  `employee_name` VARCHAR(128) NOT NULL,
  `user_account_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `user_account_id_idx` (`user_account_id` ASC) VISIBLE,
  UNIQUE INDEX `employee_code_UNIQUE` (`employee_code` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `user_account_id-employee`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `PM`.`user_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `team_name` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `team_name_UNIQUE` (`team_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `role_name_UNIQUE` (`role_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`team_member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`team_member` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `team_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `team_id_idx` (`team_id` ASC) VISIBLE,
  INDEX `role_id_idx` (`role_id` ASC) VISIBLE,
  INDEX `employee_id_idx` (`employee_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `team_id-employee_id pair` (`team_id` ASC, `employee_id` ASC) VISIBLE,
  CONSTRAINT `team_id-team_member`
    FOREIGN KEY (`team_id`)
    REFERENCES `PM`.`team` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role_id-team_member`
    FOREIGN KEY (`role_id`)
    REFERENCES `PM`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `employee_id-team_member`
    FOREIGN KEY (`employee_id`)
    REFERENCES `PM`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`project` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_name` VARCHAR(128) NOT NULL,
  `planned_start_date` DATE NOT NULL,
  `planned_end_date` DATE NOT NULL,
  `actual_start_date` DATE NULL,
  `actual_end_date` DATE NULL,
  `project_description` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `task_name` VARCHAR(255) NOT NULL,
  `project_id` INT NOT NULL,
  `priority` INT NOT NULL,
  `description` LONGTEXT NULL,
  `planned_start_date` DATE NOT NULL,
  `planned_end_date` DATE NOT NULL,
  `planned_budget` DECIMAL(8,2) NOT NULL,
  `actual_start_date` DATE NULL,
  `actual_end_date` DATE NULL,
  `actua_budget` DECIMAL(8,2) NULL,
  PRIMARY KEY (`id`),
  INDEX `project_id_idx` (`project_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `project_id-task`
    FOREIGN KEY (`project_id`)
    REFERENCES `PM`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`activity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `activity_name` VARCHAR(255) NOT NULL,
  `task_id` INT NOT NULL,
  `priority` INT NOT NULL,
  `description` LONGTEXT NULL,
  `planned_start_date` DATE NOT NULL,
  `planned_end_date` DATE NOT NULL,
  `planned_budget` DECIMAL(8,2) NOT NULL,
  `actual_start_time` DATE NULL,
  `actual_end_time` DATE NULL,
  `actual_budget` DECIMAL(8,2) NULL,
  PRIMARY KEY (`id`),
  INDEX `task_id_idx` (`task_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `task_id-actvity`
    FOREIGN KEY (`task_id`)
    REFERENCES `PM`.`task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`assigned`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`assigned` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `activity_id` INT NOT NULL,
  `employee_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `activity_id_idx` (`activity_id` ASC) VISIBLE,
  INDEX `employee_id_idx` (`employee_id` ASC) VISIBLE,
  INDEX `role_id_idx` (`role_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `activity_id-assigned`
    FOREIGN KEY (`activity_id`)
    REFERENCES `PM`.`activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `employee_id-assigned`
    FOREIGN KEY (`employee_id`)
    REFERENCES `PM`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `role_id-assigned`
    FOREIGN KEY (`role_id`)
    REFERENCES `PM`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`preceding_activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`preceding_activity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `activity_id` INT NOT NULL,
  `preceding_activity_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `activity_id_idx` (`activity_id` ASC) VISIBLE,
  INDEX `preceding_activity_id_idx` (`preceding_activity_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) INVISIBLE,
  UNIQUE INDEX `activity_id-preceding_activity_id-pair` (`activity_id` ASC, `preceding_activity_id` ASC) VISIBLE,
  CONSTRAINT `activity_id-preceding_activity`
    FOREIGN KEY (`activity_id`)
    REFERENCES `PM`.`activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `preceding_activity_id-preceding_activity`
    FOREIGN KEY (`preceding_activity_id`)
    REFERENCES `PM`.`preceding_activity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`preceding_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`preceding_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `task_id` INT NOT NULL,
  `preceding_task_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `task_id-preceding_task_it-pair` (`task_id` ASC, `preceding_task_id` ASC) VISIBLE,
  INDEX `preceding_task_id_idx` (`preceding_task_id` ASC) VISIBLE,
  CONSTRAINT `task_id-preceding_task`
    FOREIGN KEY (`task_id`)
    REFERENCES `PM`.`task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `preceding_task_id-preceding_task`
    FOREIGN KEY (`preceding_task_id`)
    REFERENCES `PM`.`preceding_task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`project_manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`project_manager` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_id` INT NOT NULL,
  `user_account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `project_id_idx` (`project_id` ASC) INVISIBLE,
  INDEX `user_account_id_idx` (`user_account_id` ASC) VISIBLE,
  UNIQUE INDEX `project_id-user_account_id-pair` (`project_id` ASC, `user_account_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `project_id-projectmanager`
    FOREIGN KEY (`project_id`)
    REFERENCES `PM`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_account_id-projectmanager`
    FOREIGN KEY (`user_account_id`)
    REFERENCES `PM`.`user_account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`client_partner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`client_partner` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cp_name` VARCHAR(255) NOT NULL,
  `cp_address` VARCHAR(255) NOT NULL,
  `cp_details` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PM`.`on_project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PM`.`on_project` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_id` INT NOT NULL,
  `client_partner_id` INT NOT NULL,
  `date_start` DATE NOT NULL,
  `date_end` DATE NULL,
  `is_client` TINYINT NOT NULL,
  `is_partner` TINYINT NOT NULL,
  `description` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `project_id_idx` (`project_id` ASC) VISIBLE,
  INDEX `client_partner_id_idx` (`client_partner_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `project_id-on_project`
    FOREIGN KEY (`project_id`)
    REFERENCES `PM`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `client_partner_id-on_project`
    FOREIGN KEY (`client_partner_id`)
    REFERENCES `PM`.`client_partner` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `PM` ;

-- -----------------------------------------------------
--  routine1
-- -----------------------------------------------------

DELIMITER $$
USE `PM`$$
$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
